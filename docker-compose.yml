version: '3.8'

services:
  # Frontend application
  frontend:
    image: ${DOCKER_HUB_USERNAME}/pokedex-frontend:latest
    ports:
      - '80:80'
    depends_on:
      - backend
    environment:
      # Use the EC2 instance's public IP for API URL
      - VITE_API_BASE_URL=http://${SERVER_IP:-localhost}:3000
    restart: unless-stopped
    networks:
      - app-network

  # Backend API service
  backend:
    image: ${DOCKER_HUB_USERNAME}/pokedex-backend:latest
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=True
      - SECRET_KEY=${DJANGO_SECRET_KEY:-default_dev_key}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-admin}
      - DB_PASS=${DB_PASS:-adminpassword}
      - DB_NAME=${DB_NAME:-pokedex_db}
      # Add SERVER_IP environment variable for Django to use in CORS settings
      - SERVER_IP=${SERVER_IP:-localhost}
    restart: unless-stopped
    networks:
      - app-network

  # Database service
  db:
    image: postgres:15-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER:-admin}
      - POSTGRES_PASSWORD=${DB_PASS:-adminpassword}
      - POSTGRES_DB=${DB_NAME:-pokedex_db}
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local
  backend-static:
    driver: local
